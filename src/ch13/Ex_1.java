package ch13;
// 1.쓰레드
public class Ex_1 {
    public static void main(String[] args) {
        // 1. 프로세스와 쓰레드 (process & thread) (1/3)
        // ▶︎ 프로세스: 실행 중인 프로그램, 자원(resources) 과 쓰레드로 구성
        // ▶︎ 쓰레드 : 프로세스 내에서 실제 작업을 수행 하는 것이 쓰레드 이다 모든 프로세스는 최소한 하나의 쓰레드를 가지고 있다.
        //  프로세스 : 쓰레드 = 고장 : 일꾼

        // ▶︎ 싱글 쓰레드 프로세스 = 자원 + 쓰레드
        // - 일꾼이 한명


        // ▶︎ 멀티 쓰레드 프로세스 = 자원 + 쓰레드 + 쓰레드 + ... +쓰레드
        // - 일꾼이 여러명
        // 여러 작업을 할수 있고 보다 효율적으로 일을 처리할수 있다

        // 1. 프로세스와 쓰레드 (process & thread) (3/3)
        // - 하나의 새로운 프로세스를 생성하는 것 보다 하나ㅡ이 새로운 쓰레드를 생성한는 것이 더 적은 비용이 든다.
        // - 2 프로세스 1 쓰레드 VS 1 프로세스 2 쓰레드

        // 2. 멀티쓰레드의 장단점
        // - 대부분의 프로그램이 멀티쓰레드로 작성되어 있다. 그러나, 멀티쓰레드 프로그랭밍이 장점만 있는 것은 아니다.

        // 장점
        // - 시스템 자원을 보다 효율적으로 사용할 수 있다.
        // - 사용자에 대한 응답성(responseness)이 향상된다.
        // - 작업이 분리되어 코드가 간결해 진다.

        // 단점
        // - 동기화(synchronization)에 주의 해야 한다.
        // - 교착상태(dead-lock)가 발생하지 않도록 주의해야 한다.
        // - 각 쓰레드가 효유율적으로 고르게 실행될 수 있게 해야 한다.
        //  "프로그래밍할 때 고려해야 할 사항들이 많다"




    }
}
