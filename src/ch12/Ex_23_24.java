package ch12;
// 23~24 애너테이션이란?
public class Ex_23_24 {
    // 23. 애너테이션이란?
    // - 주석 처럼 프로그래밍 언어에 영향을 미치지 않으며, 유용한 정보를 제공
    // - 애너테이션의 사용예
    // @Test // 이 메서드가 테스트 대상임을 테스트 프로그램에게 알린다
    // public void method(){
    //  ...
    // }

    // 24.표준 애너테이션
    // - Java 에서 제공하는ㄴ 애너테이션

    // @Override - 컴파일러에게 오버라이딩하는 메서드라는 것을 알린다.
    // @Deprecated - 앞으로 사용하지 않을 것을 권장하는 대상에 붙인다.
    // @SupperssWarnings - 컴파일러의 특정 경고메시지가 나타나지 않게 해준다.
    // @Functionallnterface - 함수형 인터페이스라는 것을 알린다.
    // @Native - native 메서드에서 참조되는 상수 앞에 붙인다

    // 메타애너테이션 (애너테이션을 만들때 사용)
    // @Target* - 애너테이션이 적용가능한 대상을 지정하는데 사용한다.
    // @Documented* - 애너테이션 정보가 javadoc 으로 작성된 문서에 포함되게 한다.
    // @inherited* - 애너테이션이 자손 클래스에 상속되도록 한다.
    // @Retention* - 애너테이션이 유지되는 범위를 지정하는데 사용한다.
    // @Repeatable* - 애너테이션을 반복해서 적용할 수 있게 한다(JDI1.8)

}
