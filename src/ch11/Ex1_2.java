package ch11;
// ch11 - 1~2 컬렉션 프레임웍과 핵심 인터페이스
public class Ex1_2 {
    public static void main(String[] args) {
        // - 컬렉션 프레임웍(collections framework

        // 여러번 반복 빠르게 전체적으로 실습 위주로 언제 쓰는지 어떻게 쓰는지가 중요하다
        // ▶︎ 컬렉션(collection)       -> 모아놓은것
        // - 여러 객체(데이터)를 모아 놓은 것을 의미

        // ▶︎ 프레임웍(framework) frame (틀) work(작업) 틀 작업 (생산성을 높이고,유지보수가 편리하다)
        // - 표준화, 정형화된 체계적인 프로그래임 방식
        // 라이브러리 (도서관) 도서관 -> 책 -> 다른 사람이 만들어 놓은 정보
        // 라이브러리의 종류 오디오,통계,그래픽,수학 기타 등등

        // ▶︎ 컬렉션 프레임웍(colections framework)    여러 객체 틀 작업
        // - 컬렉션(다수의 객체)을 다루기 위한 표준화 된 프로그래밍 방식
        // - 컬렉션을 쉽고 편리하게 다룰 수 있는 다양한 클래스를 제공       객체를 다룬다?? 객체를 저장,삭제,검색,정렬 을 다룬다라고 하면 된다
        // 객체 = 다수의 데이터
        // - java.util 패키지에 포함. JDK1.2부터 제공 그전에는 표준화가 되어 있지 않았다

        // ▶︎컬렉션 클래스(collection class)
        // - 다수의 데이터를 저장할 수 있는 클래스(예, Vector(벡터),ArrayList(어레이리스트),HashSet(헤쉬셋))

        // 2 컬렉션 프레임웍의 핵심 인터페이스 (다수의 data를 다룰목적)
        // 우리가 다루는 데이터의 특성 3가지 종류
        // 1.List(리스트)
        // 2.Set(셋)
        // 3.Map(맵)

        // List : 순서가 있는 데어터의 집합, 데이터의 중복을 허용한다. 예) 대기자 명단
        // 구현클래스 : ArrayList,LinkedList,Stack,Vector등

        // Set : 순서를 유지하지 않은 데이터의 집합, 데이터의 중복을 허용하지 않는다. 예) 양의 정수집합, 소수의 집합
        // 구현클래스 : HashSet, TreeSet 등

        // Map : 키(key) 와 값(value) 의 쌍(pair) 으로 이루어진 데이터의 집합 순서는 유지되지 않으며, 키는 중복을 허용하지 않고. 값은 중복을 허용한다.
        // 예) 우편번호, 지역번호(전화번호)
        // 구현클래스: HashMap, TreeMap, Hashtable,Properites 등


    }
}
